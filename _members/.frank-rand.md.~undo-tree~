(undo-tree-save-format-version . 1)
"66fec34885d00bbeb8b7c9d36d08fca2be68ac0d"
[nil nil nil nil (25541 52351 40386 24000) 0 nil]
([nil nil ((218 . 219) (t 25541 44677 551611 299000)) nil (25541 52351 40383 697000) 0 nil])
([nil nil ((219 . 1096)) nil (25541 52351 40381 900000) 0 nil])
([nil nil (("Anne is a good dog.
She studied at the University of Good Dogs.
She likes pets, walkies, and treats." . 1097) (undo-tree-id239 . -100) (undo-tree-id240 . -100) 1197) nil (25541 52351 40380 120000) 0 nil])
([nil nil (("
" . -1096) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 1097) nil (25541 52351 40374 869000) 0 nil])
([nil nil (("A" . -11) (undo-tree-id225 . -1) ("n" . -12) (undo-tree-id226 . -1) ("n" . -13) (undo-tree-id227 . -1) ("e" . -14) (undo-tree-id228 . -1) (" " . -15) (undo-tree-id229 . -1) ("C" . -16) (undo-tree-id230 . -1) ("h" . -17) (undo-tree-id231 . -1) ("o" . -18) (undo-tree-id232 . -1) ("v" . -19) (undo-tree-id233 . -1) ("i" . -20) (undo-tree-id234 . -1) ("e" . -21) (undo-tree-id235 . -1) 22) nil (25541 52351 40366 294000) 0 nil])
([nil nil ((11 . 29)) nil (25541 52351 40348 819000) 0 nil])
([nil nil (("O" . -20) (undo-tree-id216 . -1) ("l" . -21) (undo-tree-id217 . -1) ("q" . -22) (undo-tree-id218 . -1) ("u" . -23) (undo-tree-id219 . -1) ("i" . -24) (undo-tree-id220 . -1) ("t" . -25) (undo-tree-id221 . -1) ("t" . -26) (undo-tree-id222 . -1) ("," . -27) (undo-tree-id223 . -1) (" " . -28) (undo-tree-id224 . -1) 29) nil (25541 52351 40344 678000) 0 nil])
([nil nil ((20 . 33)) nil (25541 52351 40322 591000) 0 nil])
([nil nil (("H" . -30) (undo-tree-id213 . -1) ("." . -31) (undo-tree-id214 . -1) ("D" . -32) (undo-tree-id215 . -1) 33) nil (25541 52351 40320 232000) 0 nil])
([nil nil ((30 . 33)) nil (25541 52351 40314 620000) 0 nil])
([nil nil (("D" . -31) (undo-tree-id211 . -1) ("." . -32) (undo-tree-id212 . -1) 33) nil (25541 52351 40312 536000) 0 nil])
([nil nil ((31 . 34)) nil (25541 52351 40308 192000) 0 nil])
([nil nil (("m" . -49) (undo-tree-id205 . -1) ("e" . -50) (undo-tree-id206 . -1) ("m" . -51) (undo-tree-id207 . -1) ("b" . -52) (undo-tree-id208 . -1) ("e" . -53) (undo-tree-id209 . -1) ("r" . -54) (undo-tree-id210 . -1) 55) nil (25541 52351 40305 295000) 0 nil])
([nil nil ((49 . 57)) nil (25541 52351 40294 700000) 0 nil])
([nil nil (("B" . -75) (undo-tree-id188 . -1) ("a" . -76) (undo-tree-id189 . -1) ("r" . -77) (undo-tree-id190 . -1) ("k" . -78) (undo-tree-id191 . -1) (" " . -79) (undo-tree-id192 . -1) ("O" . -80) (undo-tree-id193 . -1) ("p" . -81) (undo-tree-id194 . -1) ("s" . -82) (undo-tree-id195 . -1) (" " . -83) (undo-tree-id196 . -1) ("E" . -84) (undo-tree-id197 . -1) ("n" . -85) (undo-tree-id198 . -1) ("g" . -86) (undo-tree-id199 . -1) ("i" . -87) (undo-tree-id200 . -1) ("n" . -88) (undo-tree-id201 . -1) ("e" . -89) (undo-tree-id202 . -1) ("e" . -90) (undo-tree-id203 . -1) ("r" . -91) (undo-tree-id204 . -1) 92) nil (25541 52351 40289 315000) 0 nil])
([nil nil ((75 . 83)) nil (25541 52351 40262 495000) 0 nil])
([nil nil (("l" . -82) (undo-tree-id187 . -1) 83) nil (25541 52351 40260 652000) 0 nil])
([nil nil ((82 . 86)) nil (25541 52351 40257 640000) 0 nil])
([nil nil (("I" . -85) (undo-tree-id186 . -1) 86) nil (25541 52351 40255 995000) 0 nil])
([nil nil ((85 . 97)) nil (25541 52351 40252 776000) 0 nil])
([nil nil (("p" . -104) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) ("r" . -105) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) ("o" . -106) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) ("g" . -107) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) ("r" . -108) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) ("a" . -109) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) ("m" . -110) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) ("m" . -111) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) ("e" . -112) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) ("r" . -113) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 114) nil (25541 52351 40232 638000) 0 nil])
([nil nil ((104 . 106)) nil (25541 52351 40079 457000) 0 nil])
([nil nil (("A" . -120) (undo-tree-id67 . -1) ("." . -121) (undo-tree-id68 . -1) (" " . -122) (undo-tree-id69 . -1) ("C" . -123) (undo-tree-id70 . -1) ("h" . -124) (undo-tree-id71 . -1) ("o" . -125) (undo-tree-id72 . -1) ("v" . -126) (undo-tree-id73 . -1) ("i" . -127) (undo-tree-id74 . -1) ("e" . -128) (undo-tree-id75 . -1) 129) nil (25541 52351 40075 577000) 0 nil])
([nil nil ((120 . 131)) nil (25541 52351 40059 969000) 0 nil])
([nil nil (("
" . -131) (undo-tree-id54 . -1) (" " . -132) (undo-tree-id55 . -1) (" " . -133) (undo-tree-id56 . -1) ("-" . -134) (undo-tree-id57 . -1) (" " . -135) (undo-tree-id58 . -1) ("A" . -136) (undo-tree-id59 . -1) (" " . -137) (undo-tree-id60 . -1) ("C" . -138) (undo-tree-id61 . -1) ("h" . -139) (undo-tree-id62 . -1) ("o" . -140) (undo-tree-id63 . -1) ("v" . -141) (undo-tree-id64 . -1) ("i" . -142) (undo-tree-id65 . -1) ("e" . -143) (undo-tree-id66 . -1) 144) nil (25541 52351 40054 763000) 0 nil])
([nil nil (("a" . -147) (undo-tree-id35 . -1) ("g" . -148) (undo-tree-id36 . -1) ("e" . -149) (undo-tree-id37 . -1) (":" . -150) (undo-tree-id38 . -1) (" " . -151) (undo-tree-id39 . -1) ("a" . -152) (undo-tree-id40 . -1) ("n" . -153) (undo-tree-id41 . -1) ("n" . -154) (undo-tree-id42 . -1) ("e" . -155) (undo-tree-id43 . -1) ("c" . -156) (undo-tree-id44 . -1) ("h" . -157) (undo-tree-id45 . -1) ("o" . -158) (undo-tree-id46 . -1) ("v" . -159) (undo-tree-id47 . -1) ("i" . -160) (undo-tree-id48 . -1) ("e" . -161) (undo-tree-id49 . -1) ("." . -162) (undo-tree-id50 . -1) ("c" . -163) (undo-tree-id51 . -1) ("o" . -164) (undo-tree-id52 . -1) ("m" . -165) (undo-tree-id53 . -1) 166) nil (25541 52351 40027 490000) 0 nil])
([nil nil (("
" . -138) (undo-tree-id26 . -1) (" " . -139) (undo-tree-id27 . -1) (" " . -140) (undo-tree-id28 . -1) ("h" . -141) (undo-tree-id29 . -1) ("o" . -142) (undo-tree-id30 . -1) ("m" . -143) (undo-tree-id31 . -1) ("e" . -144) (undo-tree-id32 . -1) ("-" . -145) (undo-tree-id33 . -1) ("p" . -146) (undo-tree-id34 . -1) 147) nil (25541 52351 39994 714000) 0 nil])
([nil nil (("a" . -148) (undo-tree-id11 . -1) ("n" . -149) (undo-tree-id12 . -1) ("n" . -150) (undo-tree-id13 . -1) ("e" . -151) (undo-tree-id14 . -1) ("@" . -152) (undo-tree-id15 . -1) ("c" . -153) (undo-tree-id16 . -1) ("h" . -154) (undo-tree-id17 . -1) ("o" . -155) (undo-tree-id18 . -1) ("v" . -156) (undo-tree-id19 . -1) ("i" . -157) (undo-tree-id20 . -1) ("e" . -158) (undo-tree-id21 . -1) ("." . -159) (undo-tree-id22 . -1) ("c" . -160) (undo-tree-id23 . -1) ("o" . -161) (undo-tree-id24 . -1) ("m" . -162) (undo-tree-id25 . -1) 163) nil (25541 52351 39975 140000) 0 nil])
([nil nil ((148 . 165)) nil (25541 52351 39950 797000) 0 nil])
([nil nil (("a" . -176) (undo-tree-id0 . -1) ("n" . -177) (undo-tree-id1 . -1) ("n" . -178) (undo-tree-id2 . -1) ("e" . -179) (undo-tree-id3 . -1) ("-" . -180) (undo-tree-id4 . -1) ("c" . -181) (undo-tree-id5 . -1) ("h" . -182) (undo-tree-id6 . -1) ("o" . -183) (undo-tree-id7 . -1) ("v" . -184) (undo-tree-id8 . -1) ("i" . -185) (undo-tree-id9 . -1) ("e" . -186) (undo-tree-id10 . -1) 187) nil (25541 52351 39943 853000) 0 nil])
([nil nil ((176 . 187)) nil (25541 52351 39895 92000) 0 nil])
([nil nil (("The Colquitt Lab opened in August of 2022, and we're excited to build a team diverse and stellar researchers." . 193) (undo-tree-id1 . -109) (undo-tree-id2 . -109) (undo-tree-id3 . -109) 302 (t 25541 52361 362281 698000)) nil (25541 53252 618834 678000) 0 nil])
([nil nil ((" " . -193) (undo-tree-id0 . -1) 194) nil (25541 53252 618819 650000) 0 nil])
([nil nil ((193 . 194) (t 25541 53252 627668 362000)) nil (25541 53613 424031 588000) 0 nil])
([nil nil (("
" . -192) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 193) nil (25541 53613 424023 239000) 0 nil])
([nil nil ((192 . 193) (t 25541 53613 445775 107000)) nil (25541 53663 702550 675000) 0 nil])
([nil nil ((193 . 829)) nil (25541 53663 702548 894000) 0 nil])
([nil nil (("Before coming to UCSC, Brad completed his postdoc in Dr. Michael Brainard's lab at UCSF/HHMI, where he studied the cellular and molecular systems that influence birdsong learning and plasticity. Before that, he earned his Ph.D. at UCSF in Dr. Stavros Lomvardas's lab (now at Columbia University) studying the roles of DNA modifications during olfactory system development. He earned a bachelor's degree in Biochemistry and Cell Biology from Rice University, working as an undergraduate researcher with Dr. Dan Wagner on zebrafish embryogenesis. Aside from the laboratory bench, Brad can navigate the piano pretty well and has a fondness for Bach, Schubert, and Sondheim. He is teaching his two kids how to identify birds, rocks, and trees, with only moderate success." . 830) (undo-tree-id98 . -767) (undo-tree-id99 . -767) (undo-tree-id100 . -767) 1597) nil (25541 53663 702547 266000) 0 nil])
([nil nil (("
" . -829) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 830) nil (25541 53663 702541 561000) 0 nil])
([nil nil (("c" . -148) (undo-tree-id77 . -1) ("o" . -149) (undo-tree-id78 . -1) ("l" . -150) (undo-tree-id79 . -1) ("q" . -151) (undo-tree-id80 . -1) ("u" . -152) (undo-tree-id81 . -1) ("i" . -153) (undo-tree-id82 . -1) ("t" . -154) (undo-tree-id83 . -1) ("t" . -155) (undo-tree-id84 . -1) ("@" . -156) (undo-tree-id85 . -1) ("u" . -157) (undo-tree-id86 . -1) ("c" . -158) (undo-tree-id87 . -1) ("s" . -159) (undo-tree-id88 . -1) ("c" . -160) (undo-tree-id89 . -1) ("." . -161) (undo-tree-id90 . -1) ("e" . -162) (undo-tree-id91 . -1) ("d" . -163) (undo-tree-id92 . -1) ("u" . -164) (undo-tree-id93 . -1) 165) nil (25541 53663 702530 787000) 0 nil])
([nil nil ((148 . 159)) nil (25541 53663 702504 630000) 0 nil])
([nil nil ((159 . 162)) nil (25541 53663 702503 483000) 0 nil])
([nil nil (("github: colquittlab" . 165)) nil (25541 53663 702502 25000) 0 nil])
([nil nil (("
" . -162) (undo-tree-id74 . -1) (" " . -163) (undo-tree-id75 . -1) (" " . -164) (undo-tree-id76 . -1) 165) nil (25541 53663 702500 49000) 0 nil])
([nil nil (("B" . -120) (undo-tree-id63 . -1) ("." . -121) (undo-tree-id64 . -1) (" " . -122) (undo-tree-id65 . -1) ("C" . -123) (undo-tree-id66 . -1) ("o" . -124) (undo-tree-id67 . -1) ("l" . -125) (undo-tree-id68 . -1) ("q" . -126) (undo-tree-id69 . -1) ("u" . -127) (undo-tree-id70 . -1) ("i" . -128) (undo-tree-id71 . -1) ("t" . -129) (undo-tree-id72 . -1) ("t" . -130) (undo-tree-id73 . -1) 131) nil (25541 53663 702492 212000) 0 nil])
([nil nil ((120 . 127)) nil (25541 53663 702474 596000) 0 nil])
([nil nil (("p" . -104) (undo-tree-id61 . -1) ("i" . -105) (undo-tree-id62 . -1) 106) nil (25541 53663 702472 434000) 0 nil])
([nil nil ((104 . 108)) nil (25541 53663 702468 545000) 0 nil])
([nil nil (("a" . -93) (undo-tree-id57 . -1) ("t" . -94) (undo-tree-id58 . -1) ("o" . -95) (undo-tree-id59 . -1) ("r" . -96) (undo-tree-id60 . -1) 97) nil (25541 53663 702466 349000) 0 nil])
([nil nil (("P" . -75) (undo-tree-id39 . -1) ("r" . -76) (undo-tree-id40 . -1) ("i" . -77) (undo-tree-id41 . -1) ("n" . -78) (undo-tree-id42 . -1) ("c" . -79) (undo-tree-id43 . -1) ("i" . -80) (undo-tree-id44 . -1) ("p" . -81) (undo-tree-id45 . -1) ("a" . -82) (undo-tree-id46 . -1) ("l" . -83) (undo-tree-id47 . -1) (" " . -84) (undo-tree-id48 . -1) ("i" . -85) (undo-tree-id49 . -1) ("n" . -86) (undo-tree-id50 . -1) ("v" . -87) (undo-tree-id51 . -1) ("e" . -88) (undo-tree-id52 . -1) ("s" . -89) (undo-tree-id53 . -1) ("t" . -90) (undo-tree-id54 . -1) ("i" . -91) (undo-tree-id55 . -1) ("g" . -92) (undo-tree-id56 . -1) 93) nil (25541 53663 702454 552000) 0 nil])
([nil nil ((75 . 87)) nil (25541 53663 702427 518000) 0 nil])
([nil nil (("a" . -86) (undo-tree-id38 . -1) 87) nil (25541 53663 702425 893000) 0 nil])
([nil nil ((86 . 91)) nil (25541 53663 702423 446000) 0 nil])
([nil nil (("i" . -89) (undo-tree-id36 . -1) ("z" . -90) (undo-tree-id37 . -1) 91) nil (25541 53663 702421 580000) 0 nil])
([nil nil ((89 . 93)) nil (25541 53663 702417 576000) 0 nil])
([nil nil (("s" . -92) (undo-tree-id35 . -1) 93) nil (25541 53663 702416 76000) 0 nil])
([nil nil ((" " . -28) (undo-tree-id29 . -1) ("P" . -29) (undo-tree-id30 . -1) ("h" . -30) (undo-tree-id31 . -1) ("." . -31) (undo-tree-id32 . -1) ("D" . -32) (undo-tree-id33 . -1) ("." . -33) (undo-tree-id34 . -1) 34) nil (25541 53663 702411 831000) 0 nil])
([nil nil (("B" . -11) (undo-tree-id12 . -1) ("r" . -12) (undo-tree-id13 . -1) ("a" . -13) (undo-tree-id14 . -1) ("d" . -14) (undo-tree-id15 . -1) ("l" . -15) (undo-tree-id16 . -1) ("e" . -16) (undo-tree-id17 . -1) ("y" . -17) (undo-tree-id18 . -1) (" " . -18) (undo-tree-id19 . -1) ("C" . -19) (undo-tree-id20 . -1) ("o" . -20) (undo-tree-id21 . -1) ("l" . -21) (undo-tree-id22 . -1) ("q" . -22) (undo-tree-id23 . -1) ("u" . -23) (undo-tree-id24 . -1) ("i" . -24) (undo-tree-id25 . -1) ("t" . -25) (undo-tree-id26 . -1) ("t" . -26) (undo-tree-id27 . -1) ("," . -27) (undo-tree-id28 . -1) 28) nil (25541 53663 702397 670000) 0 nil])
([nil nil ((11 . 20)) nil (25541 53663 702370 637000) 0 nil])
([nil nil (("a" . -17) (undo-tree-id9 . -1) ("d" . -18) (undo-tree-id10 . -1) ("f" . -19) (undo-tree-id11 . -1) 20) nil (25541 53663 702367 949000) 0 nil])
([nil nil ((17 . 22)) nil (25541 53663 702360 886000) 0 nil])
([nil nil ((" " . -21) (undo-tree-id8 . -1) 22) nil (25541 53663 702357 773000) 0 nil])
([nil current (("image: images/headshot.jpg
" . 22) (undo-tree-id7 . -27)) nil (25541 53663 702348 12000) 0 nil])
nil
